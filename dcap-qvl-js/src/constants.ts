/**
 * Constants for DCAP Quote Verification
 */

// Attestation key types
export const ATTESTATION_KEY_TYPE_ECDSA256_WITH_P256_CURVE = 2;
export const ATTESTATION_KEY_TYPE_ECDSA384_WITH_P384_CURVE = 3;

// TEE types
export const TEE_TYPE_SGX = 0x00000000;
export const TEE_TYPE_TDX = 0x00000081;

// ECDSA types
export const ECDSA_256_WITH_P256_CURVE = 2;
export const ECDSA_384_WITH_P384_CURVE = 3;
export const ECDSA_P256_SIGNATURE_BYTE_LEN = 64;

// Body types
export const BODY_BYTE_SIZE = 6;
export const BODY_SGX_ENCLAVE_REPORT_TYPE = 1;
export const BODY_TD_REPORT10_TYPE = 2;
export const BODY_TD_REPORT15_TYPE = 3;

// Report sizes
export const ENCLAVE_REPORT_BYTE_LEN = 384;
export const TD_REPORT10_BYTE_LEN = 584;
export const TD_REPORT15_BYTE_LEN = 648;

// PCK certificate types
export const PCK_ID_PLAIN_PPID = 1;
export const PCK_ID_ENCRYPTED_PPID_2048 = 2;
export const PCK_ID_ENCRYPTED_PPID_3072 = 3;
export const PCK_ID_PCK_CERTIFICATE = 4;
export const PCK_ID_PCK_CERT_CHAIN = 5;
export const PCK_ID_QE_REPORT_CERTIFICATION_DATA = 6;

// Quote structure sizes
export const HEADER_BYTE_LEN = 48;
export const AUTH_DATA_SIZE_BYTE_LEN = 4;
export const ECDSA_SIGNATURE_BYTE_LEN = 64;
export const ECDSA_PUBKEY_BYTE_LEN = 64;
export const QE_REPORT_BYTE_LEN = ENCLAVE_REPORT_BYTE_LEN;
export const QE_REPORT_SIG_BYTE_LEN = ECDSA_SIGNATURE_BYTE_LEN;
export const CERTIFICATION_DATA_TYPE_BYTE_LEN = 2;
export const CERTIFICATION_DATA_SIZE_BYTE_LEN = 4;
export const QE_AUTH_DATA_SIZE_BYTE_LEN = 2;
export const QE_CERT_DATA_TYPE_BYTE_LEN = 2;
export const QE_CERT_DATA_SIZE_BYTE_LEN = 4;

export const ATTESTATION_KEY_LEN = 64;
export const AUTHENTICATION_DATA_LEN = 32;
export const QE_HASH_DATA_BYTE_LEN = ATTESTATION_KEY_LEN + AUTHENTICATION_DATA_LEN;

export const PCK_CERT_CHAIN = 5;

// Intel QE Vendor ID
export const INTEL_QE_VENDOR_ID = new Uint8Array([
  0x93, 0x9a, 0x72, 0x33, 0xf7, 0x9c, 0x4c, 0xa9,
  0x94, 0x0a, 0x0d, 0xb3, 0x95, 0x7f, 0x06, 0x07,
]);

// PCK certificate issuer identifiers
export const PROCESSOR_ISSUER = 'Processor';
export const PLATFORM_ISSUER = 'Platform';
export const PROCESSOR_ISSUER_ID = 'processor';
export const PLATFORM_ISSUER_ID = 'platform';

// Intel SGX Root CA certificate (DER format)
// Downloaded from: https://certificates.trustedservices.intel.com/Intel_SGX_Provisioning_Certification_RootCA.cer
export const TRUSTED_ROOT_CA_DER = Uint8Array.from([
  0x30, 0x82, 0x02, 0x8f, 0x30, 0x82, 0x02, 0x34, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x22,
  0x65, 0x0c, 0xd6, 0x5a, 0x9d, 0x34, 0x89, 0xf3, 0x83, 0xb4, 0x95, 0x52, 0xbf, 0x50, 0x1b, 0x39,
  0x27, 0x06, 0xac, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
  0x68, 0x31, 0x1a, 0x30, 0x18, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x11, 0x49, 0x6e, 0x74, 0x65,
  0x6c, 0x20, 0x53, 0x47, 0x58, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x31, 0x1a, 0x30,
  0x18, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x20, 0x43, 0x6f,
  0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x14, 0x30, 0x12, 0x06, 0x03, 0x55,
  0x04, 0x07, 0x0c, 0x0b, 0x53, 0x61, 0x6e, 0x74, 0x61, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x61, 0x31,
  0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x43, 0x41, 0x31, 0x0b, 0x30, 0x09,
  0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x38, 0x30,
  0x35, 0x32, 0x31, 0x31, 0x30, 0x34, 0x35, 0x31, 0x30, 0x5a, 0x17, 0x0d, 0x34, 0x39, 0x31, 0x32,
  0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x68, 0x31, 0x1a, 0x30, 0x18, 0x06,
  0x03, 0x55, 0x04, 0x03, 0x0c, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x20, 0x53, 0x47, 0x58, 0x20,
  0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x31, 0x1a, 0x30, 0x18, 0x06, 0x03, 0x55, 0x04, 0x0a,
  0x0c, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x31, 0x14, 0x30, 0x12, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x0b, 0x53, 0x61,
  0x6e, 0x74, 0x61, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x61, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55,
  0x04, 0x08, 0x0c, 0x02, 0x43, 0x41, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
  0x02, 0x55, 0x53, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
  0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x0b, 0xa9,
  0xc4, 0xc0, 0xc0, 0xc8, 0x61, 0x93, 0xa3, 0xfe, 0x23, 0xd6, 0xb0, 0x2c, 0xda, 0x10, 0xa8, 0xbb,
  0xd4, 0xe8, 0x8e, 0x48, 0xb4, 0x45, 0x85, 0x61, 0xa3, 0x6e, 0x70, 0x55, 0x25, 0xf5, 0x67, 0x91,
  0x8e, 0x2e, 0xdc, 0x88, 0xe4, 0x0d, 0x86, 0x0b, 0xd0, 0xcc, 0x4e, 0xe2, 0x6a, 0xac, 0xc9, 0x88,
  0xe5, 0x05, 0xa9, 0x53, 0x55, 0x8c, 0x45, 0x3f, 0x6b, 0x09, 0x04, 0xae, 0x73, 0x94, 0xa3, 0x81,
  0xbb, 0x30, 0x81, 0xb8, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80,
  0x14, 0x22, 0x65, 0x0c, 0xd6, 0x5a, 0x9d, 0x34, 0x89, 0xf3, 0x83, 0xb4, 0x95, 0x52, 0xbf, 0x50,
  0x1b, 0x39, 0x27, 0x06, 0xac, 0x30, 0x52, 0x06, 0x03, 0x55, 0x1d, 0x1f, 0x04, 0x4b, 0x30, 0x49,
  0x30, 0x47, 0xa0, 0x45, 0xa0, 0x43, 0x86, 0x41, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
  0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75,
  0x73, 0x74, 0x65, 0x64, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x74,
  0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x53, 0x47, 0x58, 0x52,
  0x6f, 0x6f, 0x74, 0x43, 0x41, 0x2e, 0x64, 0x65, 0x72, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e,
  0x04, 0x16, 0x04, 0x14, 0x22, 0x65, 0x0c, 0xd6, 0x5a, 0x9d, 0x34, 0x89, 0xf3, 0x83, 0xb4, 0x95,
  0x52, 0xbf, 0x50, 0x1b, 0x39, 0x27, 0x06, 0xac, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01,
  0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
  0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x01, 0x30, 0x0a, 0x06, 0x08,
  0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00,
  0xe5, 0xbf, 0xe5, 0x09, 0x11, 0xf9, 0x2f, 0x42, 0x89, 0x20, 0xdc, 0x36, 0x8a, 0x30, 0x2e, 0xe3,
  0xd1, 0x2e, 0xc5, 0x86, 0x7f, 0xf6, 0x22, 0xec, 0x64, 0x97, 0xf7, 0x80, 0x60, 0xc1, 0x3c, 0x20,
  0x02, 0x21, 0x00, 0xe0, 0x9d, 0x25, 0xac, 0x7a, 0x0c, 0xb3, 0xe5, 0xe8, 0xe6, 0x8f, 0xec, 0x5f,
  0xa3, 0xbd, 0x41, 0x6c, 0x47, 0x44, 0x0b, 0xd9, 0x50, 0x63, 0x9d, 0x45, 0x0e, 0xdc, 0xbe, 0xa4,
  0x57, 0x6a, 0xa2,
]);

// OIDs for Intel SGX extensions
export const SGX_EXTENSION_OID = '1.2.840.113741.1.13.1';
export const FMSPC_OID = '1.2.840.113741.1.13.1.4';
export const TCB_OID = '1.2.840.113741.1.13.1.2';
export const CPUSVN_OID = '1.2.840.113741.1.13.1.2.18'; // Full 16-byte CPUSVN
export const PCESVN_OID = '1.2.840.113741.1.13.1.2.17'; // PCESVN
export const PPID_OID = '1.2.840.113741.1.13.1.1';
export const PCEID_OID = '1.2.840.113741.1.13.1.3';
export const SGX_TYPE_OID = '1.2.840.113741.1.13.1.5';
export const PLATFORM_INSTANCE_ID_OID = '1.2.840.113741.1.13.1.6';
